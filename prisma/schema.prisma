// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(cuid())
  name         String
  email        String       @unique
  password     String
  createdAt    DateTime     @default(now())
  role         String   
  activeStatus Boolean      @default(false)
  tournaments  Tournament[] // Relation field
}

model Tournament {
  id             String   @id @default(cuid())
  name           String
  createdAt      DateTime @default(now())
  tournamentDate DateTime
  registrationFee Int
  prizeMoney     Int
  numberOfTeams  Int
  rules          String @default("N/A")
  tournamentIcon String
  gameType       String
  match          Int
  status         String   @default("Upcoming")
  winner         String   @default("N/A")
  createdBy      String
  user           User     @relation(fields: [createdBy], references: [id])
  budget         Int @default(5000)
  budgetSpent    Int @default(0)
  remainingBudget Int @default(5000)
 
  prizeMoneySpent Int @default(0)
  venueSpent      Int @default(0)
  venueBudget     Int @default(1000)
  equipmentSpent      Int @default(0)
  equipmentBudget Int @default(1000)
  staffSpent          Int @default(0)
  staffBudget     Int @default(1000)
  registrationDeadline DateTime @default(now())
  auctionDate DateTime @default(now())

  
  
}

model Rules {
  id          String  @id @default(cuid()) 
  title       String
  description String
  category    String
  tournamentId String  // This is just a foreign key, but no relation is defined
}
model Transaction {
  id          String  @id @default(cuid()) 
  description String
  amount      Int
  type        String
  date        DateTime
  category    String
  tournamentId String
}

model MonthlyBudget {
  id          String  @id @default(cuid()) 
  jan          Int @default(50000)
  feb          Int @default(50000)
  mar          Int @default(50000)
  apr          Int @default(50000)
  may          Int @default(50000)
  jun          Int @default(50000)
  jul          Int @default(50000)
  aug          Int @default(50000)
  sep          Int @default(50000)
  oct          Int @default(50000)
  nov          Int @default(50000)
  dec          Int @default(50000)
}
model MonthlyExpense {
  id          String  @id @default(cuid()) 
  jan          Int @default(25000 )
  feb          Int @default(25000)
  mar          Int @default(25000)
  apr          Int @default(25000)
  may          Int @default(25000)
  jun          Int @default(25000)
  jul          Int @default(25000)
  aug          Int @default(25000)
  sep          Int @default(25000)
  oct          Int @default(25000)
  nov          Int @default(25000)
  dec          Int @default(25000)
}

model Announcement {
  id          String   @id @default(cuid()) 
  title       String
  content     String
  priority    String
  type        String
  timestamp   DateTime
  author      String
  
  tournamentId String
}

model PlayerRequest {
  id          String  @id @default(cuid()) 
  tournamentId String
  name String @default("N/A")
  playerId String @default("N/A")
  achievements String @default("N/A")
  age String @default("N/A")
 
  experience String @default("N/A")
  previousTeam String @default("N/A")
  role String 
  approved Boolean @default(false)
  createdAt DateTime @default(now())
  rejected Boolean @default(false)
  rejectionReason String @default("N/A")
}

model Approval {
  id String @id @default(cuid())
  playerId String
  tournamentId String
  createdAt DateTime @default(now())
}
